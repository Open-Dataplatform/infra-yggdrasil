scName: ps

ingress:
  hosts:
    main:
      host: <host1>
      loadBalancerIP: <ip>
  LoadBalancerResoureGroup: <resource_group>
  certmanagerissuer: <cert-manager-issuer>
  # className: ingress-traefik

applications:
  argo-workflows: true
  argo-events: true
  argo-events-setup: true
  argo-events-github: false
  argo-events-azure: false
  cert-manager: true
  cert-manager-issuer: true
  env-yggdrasil-test: true
  external-secrets: true
  grafana: true
  grafana-dashboard: true
  hephaestus: true
  traefik: true
  traefik-forward-auth: true
  jaeger-operator: true
  loki: true
  minio-operator: true
  prometheus: true
  thanos: true
  vault: true

lethe:
  enabled: true
  secretStores:
    - name: k8s-secret-backend
      providers:
        vault:
          server: "http://vault.tooling.svc:8200"
          path: "k8s"
          version: "v2"
          auth:
            # Authenticate against Vault using a Kubernetes ServiceAccount
            # token stored in a Secret.
            # https://www.vaultproject.io/docs/auth/kubernetes
            kubernetes:
              # Path where the Kubernetes authentication backend is mounted in Vault
              mountPath: "kubernetes"
              # A required field containing the Vault Role to assume.
              role: "k8s-secrets"

  secrets:
    - name: argocd-secret
      secretStore:
        backend: k8s-secret-backend
        kind: SecretStore
      target:
        name: argocd-auth-secret
        template:
          metadata:
            labels:
              app.kubernetes.io/part-of: argocd
          data:
            oidc.azure.clientSecret: "{{ .clientSecret | toString }}"
      data:
        - secretKey: clientSecret
          remoteRef:
            key: secrets/sso
            property: clientsecret

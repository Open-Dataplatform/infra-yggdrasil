dex:
  confgiSecret:
    name: dex-config
    create: false


lethe:
  enabled: true
  secretStores:
    - name: sso-secret-store
      providers:
        vault:
          server: "http://vault.tooling.svc:8200"
          path: "k8s"
          version: "v2"
          auth:
            # Authenticate against Vault using a Kubernetes ServiceAccount
            # token stored in a Secret.
            # https://www.vaultproject.io/docs/auth/kubernetes
            kubernetes:
              # Path where the Kubernetes authentication backend is mounted in Vault
              mountPath: "kubernetes"
              # A required field containing the Vault Role to assume.
              role: "k8s-secrets"

  secrets:
    - name: sso-secret
      secretStore:
        backend: sso-secret-store
        kind: SecretStore
      target:
        name: dex-config
        template:
          data:
            config.yaml: |
                # Set it to a valid URL
                issuer: https://{{ .Values.ingress.hosts.auth.host }}

                # See https://dexidp.io/docs/storage/ for more options
                storage:
                  type: memory

                connectors:
                  - type: microsoft
                    # Required field for connector id.
                    id: microsoft
                    # Required field for connector name.
                    name: Microsoft
                    config:
                      # Credentials can be string literals or pulled from the environment.
                      clientID: {{`{{ .clientId | toString }}`}}
                      clientSecret: {{`{{ .clientSecret | toString }}`}}
                      tenant: {{`{{ .tenantId | toString }}`}}
                      redirectURI: https://{{ .Values.ingress.hosts.auth.host }}/callback
      data:
        - secretKey: clientId
          remoteRef:
            key: secrets/sso
            property: clientid
        - secretKey: clientSecret
          remoteRef:
            key: secrets/sso
            property: clientsecret
        - secretKey: tenantId
          remoteRef:
            key: secrets/sso
            property: tenantid

janus:
  enabled: true
  host: {{ .Values.ingress.hosts.auth.host | quote }}
  certmanagerIssuer:
    name: {{ .Values.ingress.certmanagerissuer | quote }}
    kind: ClusterIssuer

  ingressRoutes:
    - name: dex
      entryPoints:
        - websecure
      routes:
      - kind: Rule
        match: PathPrefix(`/`)
        services:
          - name: dex
            port: 5556
      certificate:
        enabled: true
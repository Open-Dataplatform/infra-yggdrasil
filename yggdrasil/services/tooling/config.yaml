name: tooling
clusterService: true
namespace: tooling
description: Tooling services Argo WF, Harbor.

project:
  name: tooling
  server: https://kubernetes.default.svc
  sourceRepos:
    - '*'
  destinations:
  - namespace: argo-events
    server: https://kubernetes.default.svc


apps:
  - name: argo-workflows
    source:
      repoURL: "https://github.com/Open-Olympus-Project/tooling-argo-wf.git"
      targetRevision: dependency
      path: argo-wf
      valuesFile: "argowf.yaml"
    ingressRoute:
      entryPoints:
        - websecure
      routes:
      - kind: Rule
        host: service-poc.westeurope.cloudapp.azure.com
        match: PathPrefix(`/argowf`)
        services:
          - name: argo-workflows-server
            port: 2746
        middlewares:
          - name: argo-stripprefix
      
      middlewares:
      - name: argo-stripprefix
        spec: 
          stripPrefix:
            prefixes:
              - /argowf
      certificate:
        enabled: true
        issuerRef:
          name: letsencrypt-staging
          kind: ClusterIssuer
  - name: argo-events
    source:
      repoURL: "https://github.com/Open-Olympus-Project/tooling-argo-events.git"
      targetRevision: dependency
      path: argo-events
      valuesFile: "argo-events.yaml"
  - name: harbor
    source:
      repoURL: "https://github.com/Open-Olympus-Project/tooling-harbor.git"
      targetRevision: dependency
      path: harbor
      valuesFile: "harbor.yaml"
    # ingressRoute:
    #   entryPoints:
    #     - websecure
    #   routes:
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/`)
    #     services:
    #       - name: harbor-portal
    #         port: 80
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/api/`)
    #     services:
    #       - name: harbor-core
    #         port: 80
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/service/`)
    #     services:
    #       - name: harbor-core
    #         port: 80
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/v2`)
    #     services:
    #       - name: harbor-core
    #         port: 80
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/chartrepo/`)
    #     services:
    #       - name: harbor-core
    #         port: 80
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/c/`)
    #     services:
    #       - name: harbor-core
    #         port: 80
    #   certificate:
    #     enabled: true
    #     issuerRef:
    #       name: letsencrypt-staging
    #       kind: ClusterIssuer
  - name: vault
    source:
      repoURL: "https://github.com/Open-Olympus-Project/tooling-vault.git"
      targetRevision: vault-init-job
      path: vault
      valuesFile: "vault.yaml"
    # ingressRoute:
    #   entryPoints:
    #     - websecure
    #   routes:
    #   - kind: Rule
    #     host: service-poc.westeurope.cloudapp.azure.com
    #     match: PathPrefix(`/vault`)
    #     services:
    #       - name: vault-ui
    #         port: 8200
    #     middlewares:
    #       - name: vault-stripprefix
      
    #   middlewares:
    #   - name: vault-stripprefix
    #     spec: 
    #       stripPrefix:
    #         prefixes:
    #           - /vault
    #   certificate:
    #     enabled: true
    #     issuerRef:
    #       name: letsencrypt-staging
    #       kind: ClusterIssuer
  - name: external-secrets
    source:
      repoURL: "https://github.com/Open-Olympus-Project/tooling-external-secrets.git"
      targetRevision: operator
      path: external-secrets
      valuesFile: "external-secrets.yaml"